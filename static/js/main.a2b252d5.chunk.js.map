{"version":3,"sources":["config.js","components/Alerts.js","components/ARTCard.js","components/TradeCard.js","components/Wallet.js","components/FAQ.js","components/Docs.js","components/Dash.js","components/Markets.js","components/Header.js","App.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","AlertBanner","error","setAlert","setError","Alert","variant","onClose","dismissible","Heading","GAS","UNIT","BN","ARTCard","currentUser","contract","ausdContract","useState","artTotalBalance","setArtTotalBalance","artStakedBalance","setArtStakedBalance","artUnstakedBalance","setArtUnstakedBalance","ausdBalance","setAusdBalance","artPrice","setArtPrice","nearBalance","formatNearAmount","balance","nearPrice","setNearPrice","transferSubmit","setTransferSubmit","stakeAndMintLoading","setStakeAndMintLoading","unstakAndBurnLoading","setUnstakeAndBurnLoading","loadTotalBalance","get_total_balance","owner_id","accountId","then","art","loadUnstakedBalance","get_unstaked_balance","loadStakedBalance","get_staked_balance","account_id","loadPrice","get_price","price","loadAUSDBalance","get_balance","ausd","loadNearPrice","get_asset_price","asset","useEffect","setInterval","deposit","setDeposit","deposit_ausd","setDepositAUSD","alert","receiver","setReceiver","amount","setAmount","transferArt","event","a","preventDefault","transfer","new_owner_id","message","setShow","stakeAmount","setStake","stakeAndmint","stake_and_mint","stake","unstakeAmount","setUnstake","burnToUnstake","burn_to_unstake","unstake_amount","show","maybeLoad","state","displayFun","Spinner","size","animation","className","Row","noGutters","Col","Card","Body","Title","Text","Number","toFixed","n","style","background","onClick","Modal","onHide","Header","closeButton","Form","width","onSubmit","Group","controlId","Label","InputGroup","FormControl","value","onChange","target","Button","type","Footer","nearDeposit","mul","div","buy_art_with_near","toString","Prepend","textAlign","buy_ausd_with_near","TradeCard","assetP","setAssetP","assetB","setAssetB","currentAsset","setCurrentAsset","buyLoading","setBuyLoading","sellLoading","setSellLoading","loadCurrentAssetPrice","loadAssetPrice","loadCurrentAssetBalance","loadAssetBalance","get_asset_balance","assetItems","Object","entries","map","k","aUSD","buyAmount","setBuyAmount","sellAmount","setSellAmount","buyAssetWithAusd","toLocaleString","useGrouping","buy_asset_with_ausd","asset_amount","sellAssettoAusd","sell_asset_to_ausd","Control","as","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","fontSize","Account","useCallback","aUSDBalnce","aBTC","aNEAR","aGOLD","aSPY","aEUR","Table","striped","bordered","hover","FAQ","Dash","coinList","day","setDay","getPriceList","dailyPriceList","p","fetch","headers","res3","json","getDate","array","arr","time","slice","Charts","title","data","date","index","option","text","textStyle","fontWeight","tooltip","trigger","xAxis","boundaryGap","yAxis","splitLine","lineStyle","color","axisLabel","formatter","series","name","symbol","areaStyle","echarts","LinearGradient","offset","height","padding","_","i","Markets","month","setMonth","week","setWeek","monthlyPriceList","weeklyPriceList","res1","res2","getPrice","getOption","console","log","Tabs","id","Tab","signIn","signOut","exact","to","App","nearConfig","wallet","isLoading","setLoading","requestSignIn","setTimeout","window","location","Container","path","render","Wallet","component","Docs","getConfig","near","nearAPI","deps","keyStore","BrowserLocalStorageKeyStore","walletConnection","getAccountId","account","viewMethods","changeMethods","sender","nearInitPromise","initContract","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a2b252d5.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'art.artcoin.testnet'\n\nfunction getConfig (env) {\n  switch (env) {\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      }\n    case 'production':\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'default',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      }\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      }\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME\n      }\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      }\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      }\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n  }\n}\n\nmodule.exports = getConfig","import React from 'react'\nimport {Alert} from 'react-bootstrap'\n\nconst AlertBanner = ({error, setAlert, setError}) => (\n    <Alert  \n        variant={'danger'} \n        onClose={() => {\n            setAlert(false)\n            setError('')\n        }} \n        dismissible\n    >\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n        <p>\n            Error: {error}. Try again later\n        </p>\n    </Alert>\n)\n\nexport default AlertBanner","import React, {useEffect, useState} from 'react';\nimport { Row, Col, Button, Form, InputGroup, FormControl, Modal, Spinner, Card } from 'react-bootstrap';\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\nimport BN from 'bn.js'\nimport AlertBanner from './Alerts'\n\nconst GAS = 300000000000000\nconst UNIT = new BN('1000000000000000000000000')\n\nconst ARTCard = ({currentUser, contract, ausdContract}) => {\n    const [artTotalBalance, setArtTotalBalance] = useState('l')\n    const [artStakedBalance, setArtStakedBalance] = useState('l')\n    const [artUnstakedBalance, setArtUnstakedBalance] = useState('l')\n\n    const [ausdBalance, setAusdBalance] = useState('l')\n    const [artPrice, setArtPrice] = useState('l')\n    const nearBalance = formatNearAmount(currentUser.balance,5)\n    const [nearPrice, setNearPrice] = useState('l')\n    \n    // Button text, '' means show text, 'l' means show spinner\n    const [transferSubmit, setTransferSubmit] = useState('')\n    const [stakeAndMintLoading, setStakeAndMintLoading ] = useState('')\n    const [unstakAndBurnLoading, setUnstakeAndBurnLoading ] = useState('')\n\n    const loadTotalBalance = () => {\n        return contract.get_total_balance({owner_id: currentUser.accountId})\n                .then((art) => setArtTotalBalance(art))\n    }\n\n    const loadUnstakedBalance = () => {\n        return contract.get_unstaked_balance({owner_id: currentUser.accountId})\n        .then((art) => setArtUnstakedBalance(art))\n    }\n\n    const loadStakedBalance = () => {\n        return contract.get_staked_balance({account_id: currentUser.accountId})\n        .then((art) => setArtStakedBalance(art))\n    }\n\n    const loadPrice = () => {\n        contract.get_price()\n        .then((price) => setArtPrice(price))\n    }\n\n    const loadAUSDBalance = () => {\n        ausdContract.get_balance({owner_id: currentUser.accountId})\n        .then((ausd) => setAusdBalance(ausd))\n    }\n\n    const loadNearPrice = () => {\n        contract.get_asset_price({asset: 'aNEAR'})\n        .then((price) => {\n            setNearPrice(price)\n        })\n    }\n\n    useEffect(() => {\n        loadTotalBalance()\n        loadUnstakedBalance()\n        loadStakedBalance()\n        loadPrice()\n        loadAUSDBalance()\n        loadNearPrice()\n\n        setInterval(() => {\n            loadPrice()\n            loadAUSDBalance()\n            loadNearPrice() \n        }, 300000)\n    }, [])\n\n    // deposit\n    const [deposit, setDeposit] = useState('10')\n    const [deposit_ausd, setDepositAUSD] = useState('10')\n\n    const buyArtWithNear = (event) => {\n        event.preventDefault()\n        let nearDeposit = new BN(deposit).mul(new BN(artPrice)).mul(UNIT).div(new BN(nearPrice))\n        contract.buy_art_with_near({}, GAS, nearDeposit.toString())\n    }\n\n    const buyAusdWithNear = (event) => {\n        event.preventDefault()\n        let nearDeposit = new BN(deposit).mul(UNIT).mul(new BN(100000000)).div(new BN(nearPrice))\n        contract.buy_ausd_with_near({}, GAS, nearDeposit.toString())\n    }\n\n    // alert\n    const [alert, setAlert] = useState(false)\n    const [error, setError] = useState('')\n\n    // transfer\n    const [receiver, setReceiver] = useState('')\n    const [amount, setAmount] = useState('')\n\n    const transferArt = async (event) => {\n        event.preventDefault()\n        setArtTotalBalance('l')\n        setArtUnstakedBalance('l')\n        setTransferSubmit('l')\n        try {\n            await contract.transfer({new_owner_id: receiver, amount: amount + '000000000000000000000000'}, GAS)\n        } catch(e) {\n            setAlert(true)\n            setError(e.message)\n        }\n        setTransferSubmit('')\n        setShow(false)\n        loadTotalBalance()\n        loadUnstakedBalance()\n    }\n\n    // stake\n    const [stakeAmount, setStake] = useState('1000')\n\n    const sleep = (time) => {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    const stakeAndmint = async (event) => {\n        event.preventDefault()\n        setArtUnstakedBalance('l')\n        setArtStakedBalance('l')\n        setAusdBalance('l')\n        setStakeAndMintLoading('l')\n        try {\n            await contract.stake_and_mint({stake: stakeAmount + '000000000000000000000000'})\n        } catch(e) {\n            setAlert(true)\n            setError(e.message)\n        }\n        setStakeAndMintLoading('')\n        loadAUSDBalance()\n        loadStakedBalance()\n        loadUnstakedBalance()\n    }\n\n    //unstake\n    const [unstakeAmount, setUnstake] = useState('1000')\n\n    const burnToUnstake = async (event) => {\n        event.preventDefault()\n        setArtUnstakedBalance('l')\n        setArtStakedBalance('l')\n        setAusdBalance('l')\n        setUnstakeAndBurnLoading('l')\n        try {\n            await contract.burn_to_unstake({unstake_amount: unstakeAmount + '000000000000000000000000'})\n        } catch(e) {\n            setAlert(true)\n            setError(e.message)\n        }\n        setUnstakeAndBurnLoading('')\n        loadAUSDBalance()\n        loadStakedBalance()\n        loadUnstakedBalance()\n    }\n\n    //modal\n    const [show, setShow] = useState(false);\n\n    const maybeLoad = (state, displayFun) => {\n        if (state == 'l') {\n           return <Spinner       size=\"sm\"           animation=\"border\" />\n        } else {\n            return displayFun(state)\n        }\n    } \n\n    return (<div className=\"art-card\">\n        {alert && <AlertBanner error={error} setError={setError} setAlert={setAlert} />}  \n\n        <Row noGutters className=\"mb-2\">\n            <Col>\n            <Card className=\"price\">\n                <Card.Body>\n                    <Card.Title>ART Price</Card.Title>\n                    <Card.Text>\n                    {maybeLoad(artPrice, (a) => (Number(a)/10**8).toFixed(2))} $\n                    </Card.Text>\n                </Card.Body>\n            </Card>   \n            </Col>\n            <Col>\n            <Card className=\"price\">\n                <Card.Body>\n                    <Card.Title>NEAR Price</Card.Title>\n                    <Card.Text>\n                    {maybeLoad(nearPrice, (n) => (Number(n)/10**8).toFixed(2))} $\n                    </Card.Text>\n                </Card.Body>\n            </Card>    \n            </Col>\n        </Row>  \n\n        <Row noGutters className=\"p-2 mb-2\" style={{background: '#fff'}}>\n            <Col>NEAR Wallet : {currentUser.accountId} </Col>\n            <Col>NEAR Balance: {nearBalance} Ⓝ</Col>\n        </Row>\n\n        <Row noGutters className=\"p-2 mb-2\">\n            <Col>\n                ART Total Balace: {maybeLoad(artTotalBalance, (a) => formatNearAmount(a, 5))} ⓐ {' '} <br />\n                ART Staked Balace: {maybeLoad(artStakedBalance, (a) => formatNearAmount(a, 5))} ⓐ\n            </Col>\n            <Col>     \n                ART Unstaked Balace: {maybeLoad(artUnstakedBalance, (a) => formatNearAmount(a, 5))} ⓐ\n                <button onClick={() => setShow(true)}>Transfer</button>\n                <Modal show={show} onHide={() =>setShow(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Transfer ART to your hoomie</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form style={{width: \"100%\"}} onSubmit={transferArt}>\n                            <Form.Group controlId=\"receiver\">\n                                <Form.Label>Receiver: </Form.Label>\n                                <InputGroup className=\"mb-2\" >\n                                    <FormControl \n                                        value={receiver}\n                                        onChange={(event) => {\n                                            if (event) {\n                                                const value = event.target !== null ? event.target.value : \"\";\n                                                setReceiver(value)\n                                            }\n                                        }} \n                                    />\n                                </InputGroup>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"sendamount\">\n                                <Form.Label>Send Amount: </Form.Label>\n                                <InputGroup className=\"mb-2\" >\n                                    <FormControl \n                                        value={amount}\n                                        onChange={(event) => {\n                                            if (event) {\n                                                const value = event.target !== null ? event.target.value : \"\";\n                                                setAmount(value)\n                                            }\n                                        }} \n                                    />\n                                </InputGroup>\n                            </Form.Group>\n\n                            <Button type=\"submit\">\n                                {maybeLoad(transferSubmit, (a) => 'Confirm Transfer')}\n                            </Button>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={() => setShow(false)}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Col>\n        </Row>\n\n        <Row noGutters className=\"p-2 mb-2\">\n            <Col>\n                <Form style={{width: \"100%\"}} onSubmit={buyArtWithNear}>\n                    <Form.Row className=\"align-items-center\">\n                        <Col className=\"mx-1\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>ART Amount</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl  \n                                value={deposit}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setDeposit(value)\n                                    }\n                                }} />\n                        </InputGroup>\n                        </Col>\n                        <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                        <Button type=\"submit\">Buy ART with NEAR token</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Col>\n        </Row>\n\n        <Row noGutters className=\"p-2\" style={{background: '#fff'}}>\n            <Col>\n                aUSD Balance: {maybeLoad(ausdBalance, (a) => formatNearAmount(a, 5))} $\n            </Col>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\" style={{background: '#fff'}}>\n            <Col>\n                <Form style={{width: \"100%\"}} onSubmit={buyAusdWithNear}>\n                    <Form.Row className=\"align-items-center\">\n                        <Col className=\"mx-1\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>aUSD Amount</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl  \n                                value={deposit_ausd}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setDepositAUSD(value)\n                                    }\n                                }} />\n                        </InputGroup>\n                        </Col>\n                        <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                        <Button type=\"submit\">Buy aUSD with NEAR token</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Col>\n        </Row>\n        \n        <Row noGutters className=\"p-2 mb-2\">\n            <Form style={{width: \"100%\"}} onSubmit={stakeAndmint}>\n                <Form.Row className=\"align-items-center\">\n                    <Col className=\"mx-1\">\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>ART Amount</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl  \n                            value={stakeAmount}\n                            onChange={(event) => {\n                                if (event) {\n                                    const value = event.target !== null ? event.target.value : \"\";\n                                    setStake(value)\n                                  }\n                            }} />\n                    </InputGroup>\n                    </Col>\n                    <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                    <Button type=\"submit\">{maybeLoad(stakeAndMintLoading, () => 'Stake & Mint')}</Button>\n                    </Col>\n                </Form.Row>\n            </Form>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\">\n            <Form style={{width: \"100%\"}} onSubmit={burnToUnstake}>\n                <Form.Row className=\"align-items-center\">\n                    <Col className=\"mx-1\">\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>ART Amount</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl \n                            value={unstakeAmount}\n                            onChange={(event) => {\n                                if (event) {\n                                    const value = event.target !== null ? event.target.value : \"\";\n                                    setUnstake(value)\n                                  }\n                            }}\n                         />\n                    </InputGroup>\n                    </Col>\n                    <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                    <Button type=\"submit\">{maybeLoad(unstakAndBurnLoading, (a) => 'Burn to Unstake')}</Button>\n                    </Col>\n                </Form.Row>\n            </Form>\n        </Row>\n    </div>)\n}\n\nexport default ARTCard","import React, {useState, useEffect} from 'react'\nimport { Row, Col, Button, Form, FormControl, InputGroup, Accordion, Card, Spinner } from 'react-bootstrap'\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\"\nimport AlertBanner from './Alerts'\n\nconst GAS = 300000000000000\n\nconst TradeCard = ({contract, accountId}) => {\n\n    const [assetP, setAssetP] = useState({'aNEAR':'0', 'aBTC':'0', 'aGOLD':'0', 'aSPY':'0', 'aEUR':'0'})\n    const [assetB, setAssetB] = useState({'aNEAR':'0', 'aBTC':'0', 'aGOLD':'0', 'aSPY':'0', 'aEUR':'0'})\n    const [currentAsset, setCurrentAsset] = useState(\"aBTC\")\n\n    // Button text, '' means show text, 'l' means show spinner\n    const [buyLoading, setBuyLoading] = useState('')\n    const [sellLoading, setSellLoading] = useState('')\n\n    const maybeLoad = (state, displayFun) => {\n        if (state == 'l') {\n           return <Spinner       size=\"sm\"           animation=\"border\" />\n        } else {\n            return displayFun(state)\n        }\n    }\n\n    const loadCurrentAssetPrice = () => {\n        loadAssetPrice(currentAsset)\n    }\n\n    const loadCurrentAssetBalance = () => {\n        loadAssetBalance(currentAsset)\n    }\n\n    const loadAssetPrice = (a) => {\n        contract.get_asset_price({asset: a})\n        .then((price) => {\n            setAssetP({...assetP,[a]: price})\n        })\n    }\n\n    const loadAssetBalance = (a) => {\n        contract.get_asset_balance({account_id: accountId, asset: a})\n        .then((balance) => setAssetB({...assetB, [a]: balance}))\n    }\n\n    useEffect(() => {\n        loadCurrentAssetPrice()\n        loadCurrentAssetBalance()\n\n        setInterval(() => {\n            loadCurrentAssetPrice() \n        }, 300000)\n    }, [])\n\n    const assetItems = Object.entries(assetB).map(([k, _]) =>\n        <option key={k}>\n        {k}\n        </option>\n    )\n\n    // alert\n    const [alert, setAlert] = useState(false)\n    const [error, setError] = useState('')\n\n    const [buyAmount, setBuyAmount] = useState({asset: '0', aUSD: '0'})\n\n    const [sellAmount, setSellAmount] = useState({asset:'0', aUSD: '0'})\n\n    const buyAssetWithAusd = async (event) => {\n        event.preventDefault()\n        let amount = (Number(buyAmount.asset)*(10**24)).toLocaleString('fullwide', {useGrouping:false})\n        setBuyLoading('l')\n        try {\n            await contract.buy_asset_with_ausd({asset: currentAsset, asset_amount: amount}, GAS)\n            await loadCurrentAssetBalance()        \n        } catch(e) {\n            setAlert(true)\n            setError(e.message)\n        }\n        setBuyLoading('')\n    }\n\n    const sellAssettoAusd = async (event) => {\n        event.preventDefault()\n        let amount = (Number(sellAmount.asset)*(10**24)).toLocaleString('fullwide', {useGrouping:false})\n        setSellLoading('l')\n        try {\n            await contract.sell_asset_to_ausd({asset: currentAsset, asset_amount: amount}, GAS)\n            await loadCurrentAssetBalance()       \n        } catch(e) {\n            setAlert(true)\n            setError(e.message)\n        }\n        setSellLoading('')\n    }\n\n    return <div className=\"trade-card\">\n    {alert && <AlertBanner error={error} setError={setError} setAlert={setAlert} />}  \n    <Row noGutters className=\"p-2\" style={{background: '#fff'}}>\n       <Col className=\"p-2 title-font\">BUY/SELL</Col> \n       <Col>\n            <Form.Group controlId=\"formSelect\">\n                <Form.Control \n                    value={currentAsset} \n                    as=\"select\" \n                    onChange={(event) => {\n                        if (event) {\n                            const value = event.target !== null ? event.target.value : \"\";\n                            setCurrentAsset(value)\n                            loadAssetPrice(value)\n                        }\n                    }}>\n                    {assetItems}\n                </Form.Control>\n            </Form.Group>\n       </Col>\n    </Row>\n    <Accordion defaultActiveKey='0'>\n        <Card>\n            <Card.Header className=\"title-font\">\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    BUY\n                </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                    <Form\n                        onSubmit={buyAssetWithAusd} \n                        style={{width: '100%'}}>\n                        <Form.Group controlId=\"buyAsset\">\n                            <Form.Label>BUY {currentAsset}: </Form.Label>\n                            <InputGroup className=\"mb-2\" >\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>{currentAsset}</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl \n                                    value={buyAmount.asset}\n                                    onChange={(event) => {\n                                        if (event) {\n                                            const value = event.target !== null ? event.target.value : \"\";\n                                            setBuyAmount({asset: value, aUSD: Number(value)*Number(assetP[currentAsset])/10**8})\n                                        }\n                                    }} \n                                />\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"fromausd\">\n                            <Form.Label>with aUSD: </Form.Label>\n                            <InputGroup className=\"mb-2\">\n                                <InputGroup.Prepend>\n                                <InputGroup.Text>aUSD</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl \n                                    value={buyAmount.aUSD}\n                                    onChange={(event) => {\n                                        if (event) {\n                                            const value = event.target !== null ? event.target.value : \"\";\n                                            setBuyAmount({asset: Number(value)/(Number(assetP[currentAsset])/10**8), aUSD: value})\n                                        }\n                                    }} \n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        \n                        <Row style={{fontSize: \"12px\"}}>\n                            <Col>Balance: {formatNearAmount(assetB[currentAsset],5)}</Col>\n                            <Col>Price: 1 {currentAsset} = {(Number(assetP[currentAsset])/10**8).toFixed(4)} aUSD</Col>\n                            <Col>USD VALUE: ${(Number(buyAmount.asset)*Number(assetP[currentAsset])/10**8).toFixed(4)}</Col>\n                        </Row>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            {maybeLoad(buyLoading, (a) => 'CONFIRM TRADE')}\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n        <Card>\n            <Card.Header className=\"title-font\">\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                SELL\n            </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n                <Form \n                    onSubmit={sellAssettoAusd}\n                    style={{width: '100%'}}>\n                    <Form.Group controlId=\"sellAsset\">\n                        <Form.Label>SELL {currentAsset}: </Form.Label>\n                        <InputGroup className=\"mb-2\" >\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>{currentAsset}</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl \n                                value={sellAmount.asset}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setSellAmount({asset: value, aUSD: Number(value)*Number(assetP[currentAsset])/10**8})\n                                    }\n                                }} \n                                />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"toausd\">\n                        <Form.Label>to aUSD: </Form.Label>\n                        <InputGroup className=\"mb-2\">\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>aUSD</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl \n                                value={sellAmount.aUSD}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setSellAmount({asset: Number(value)/(Number(assetP[currentAsset])/10**8), aUSD: value})\n                                    }\n                                }} \n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    \n                    <Row style={{fontSize: \"12px\"}}>\n                        <Col>Balace: {formatNearAmount(assetB[currentAsset],5)}</Col>\n                        <Col>Price: 1 {currentAsset} = {(Number(assetP[currentAsset])/10**8).toFixed(4)} aUSD</Col>\n                        <Col>USD VALUE: ${(Number(sellAmount.asset)*Number(assetP[currentAsset])/10**8).toFixed(4)}</Col>\n                    </Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        {maybeLoad(sellLoading, (a) => 'CONFIRM TRADE')}\n                    </Button>\n                </Form>\n            </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    </Accordion>\n    </div>\n}\n\nexport default TradeCard\n\n","import React, {useState, useEffect, useCallback} from 'react'\nimport { Row, Card, Table, Col } from 'react-bootstrap'\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\n\nconst Account = ({contract, accountId, ausdContract}) => {\n\n    const [assetB, setAssetB] = useState({'aNEAR':'0', 'aBTC':'0', 'aGOLD':'0', 'aSPY':'0', 'aEUR':'0'})\n\n    const loadAssetBalance = useCallback(async (a) => {\n        return await contract.get_asset_balance({account_id: accountId, asset: a})\n    }) \n\n    const [aUSDBalnce, setAusdBalance] = useState('')\n\n    const loadAUSDBalance = () => {\n        ausdContract.get_balance({owner_id: accountId})\n        .then((ausd) => setAusdBalance(ausd))\n    }\n\n    useEffect(async () => {\n        loadAUSDBalance()\n\n        let aBTC = await loadAssetBalance('aBTC')\n        let aNEAR = await loadAssetBalance('aNEAR')\n        let aGOLD = await loadAssetBalance('aGOLD')\n        let aSPY = await loadAssetBalance('aSPY')\n        let aEUR =await loadAssetBalance('aEUR')\n        setAssetB({aBTC, aNEAR, aGOLD, aSPY, aEUR})\n    }, [])\n    \n    return <div className=\"trade-card\">\n    <Table striped bordered hover>\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>Token</th>\n                <th>Balance</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <th>0</th>\n                <td>aUSD</td>\n                <td>{formatNearAmount(aUSDBalnce,5)}</td>\n            </tr>\n            <tr>\n                <th>1</th>\n                <td>aBTC</td>\n                <td>{formatNearAmount(assetB['aBTC'], 5)}</td>\n            </tr>\n            <tr>\n                <th>2</th>\n                <td>aNEAR</td>\n                <td>{assetB['aNEAR']}</td>\n            </tr>\n            <tr>\n                <th>3</th>\n                <td>aGOLD</td>\n                <td>{formatNearAmount(assetB['aGOLD'],5)}</td>\n            </tr>            \n            <tr>\n                <th>4</th>\n                <td>aEUR</td>\n                <td>{formatNearAmount(assetB['aEUR'],5)}</td>\n            </tr>\n            <tr>\n                <th>5</th>\n                <td>aSPY</td>\n                <td>{formatNearAmount(assetB['aSPY'],5)}</td>\n            </tr>\n        </tbody>\n    </Table>\n    </div>\n}\n\nexport default Account\n\n","import { Row } from 'react-bootstrap'\n\nconst FAQ = () => (\n    <>\n    <Row noGutters className=\"p-2 mb-2\">\n    - If you want staking ART, start with \"Buy ART with NEAR token\"\n    For every $5 value of ART staked, you will mint 1 aUSD. In reverse, after burning 1 aUSD, you will get $5 value of ART back.\n    In future, staking reward and governance will be enabled for ART stakers.\n    </Row>\n\n    <Row noGutters className=\"p-2 mb-2\">\n        - If you just want trading with stable coin, start with \"Buy aUSD with NEAR token\"\n    </Row>\n    </>\n)\n\nexport default FAQ","import { Row } from 'react-bootstrap'\n\nconst FAQ = () => (\n    <ul style={{textAlign:'left'}}>\n    <li>\n        It's the first decentralized native stable coin on NEAR (Please correct me if i'm wrong). Decentralized means is not backed by a central reserve of USD like USDT or USDC. Instead, it's backed by all ART token stakers. Native means is contract built on NEAR, not ethereum contract bridged to NEAR\n    </li>\n    <li>\n        It has defi staking, that allows defi farmers to lock, stake ART and earn more staking reward than NEAR in theoretical case, because ART gives a similar inflation as NEAR, but when you stake you can mint some aUSD, and you can sell or invest aUSD and this part is additional to NEAR staking.\n    </li>\n    <li>\n    It provide a zero-slip, infinite liquidity and instantly exchange between any kind of cryptocurrency, commodity, stock and foreign currency. There's a few available on testnet to proof of concept, and more assets will be available soon. Thanks to NEAR's high efficiency and performance, ART only takes seconds to finish any exchange and almost neglectable transaction fee. Unlike Synthetix, exchange transaction is delayed many minutes or hours due to Ethereum's nature. And both transaction delay and tens of dollars transaction fee make trading impractical and unprofitable\n    </li>\n</ul>\n)\n\nexport default FAQ","import React, {useEffect, useState} from 'react'\nimport ReactEcharts from \"echarts-for-react\";\nimport * as echarts from \"echarts\";\n\n\nconst Dash = () => {\n    const coinList = ['art', 'aNEAR', 'aBTC', 'aGOLD', 'aSPY', 'aEUR']\n    const [day, setDay] = useState({art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null})\n\n    const getPriceList = async () => {\n        let dailyPriceList = {art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null}\n\n        for(const p in dailyPriceList){\n            let res3 = await fetch(`http://35.236.75.242:3000/prices/${p}/1D`, {\n                headers : { \n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                 }\n          \n              })\n            res3 = await res3.json()\n            dailyPriceList[p] = res3\n        }\n\n        setDay(dailyPriceList)\n    }\n\n    useEffect(async () => {\n        await getPriceList()\n    }, [])\n\n    const getPrice = (array) => {\n        return array.map((arr) => arr.price.toFixed(2))\n    }\n\n    const getDate = (array) => {\n        return array.map((arr) => arr.time.slice(11,19))\n    }\n\n    const getOption = (title, data, date) => {\n        return {\n          title: {\n            text: title,\n            textStyle: {\n                fontWeight: 'lighter',\n                fontSize: 14\n            }\n          },\n          tooltip: {\n            trigger: \"axis\",\n          },\n          xAxis: [\n            {\n              type: \"category\",\n              boundaryGap: false,\n              data: date,\n            },\n          ],\n          yAxis: [\n            {\n              type: \"value\",\n              splitLine: {\n                lineStyle: {\n                  color: \"white\",\n                },\n              },\n              axisLabel : {\n                formatter: function (value) {\n                    return value > 1000 ? value/1000 + 'k' : value\n                }\n              }\n            },\n          ],\n          series: [\n            {\n              name: \"Price: \",\n              type: \"line\",\n              lineStyle: {\n                color: \"#9c87f7\",\n                width: 1,\n              },\n              symbol: 'none',\n              areaStyle: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                  {\n                    offset: 0,\n                    color: \"rgb(207, 196, 255)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(236, 232, 255, 0.1)\",\n                  },\n                ]),\n              },\n              data: data,\n            },\n          ],\n        };\n    };\n\n    const Charts = ({index}) => {\n        if (day[coinList[index]]) {\n            return (<ReactEcharts\n              option={getOption( coinList[index] + ' / aUSD', getPrice(day[coinList[index]]), getDate(day[coinList[index]]))}\n              style={{width: '100%', height: '200px'}}\n        />)\n        }\n        return null\n    }\n\n    return <div>\n        <h3 style={{padding: '5px 5%'}}> aUSD, the first decentralized native stable coin on NEAR and a defi asset exchange like Synthetix, that can trade virtual assets like BTC, Gold, EUR and S&P500 Index </h3>\n        <div className=\"dash-charts\">\n            {coinList.map((_,i) => <div className=\"box\"><Charts index={i} /></div>)}\n            \n        </div>\n    </div>\n}\n\nexport default Dash\n\n","import React, {useEffect, useState} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Tabs, Tab, Row, Form } from 'react-bootstrap'\nimport ReactEcharts from \"echarts-for-react\";\nimport * as echarts from \"echarts\";\n\nconst Markets = () => {\n    const coinList = ['art', 'aNEAR', 'aBTC', 'aGOLD', 'aSPY', 'aEUR']\n    const [month, setMonth] = useState({art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null})\n    const [week, setWeek] = useState({art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null})\n    const [day, setDay] = useState({art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null})\n\n    const getPriceList = async () => {\n        let monthlyPriceList = {art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null}\n        let weeklyPriceList = {art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null}\n        let dailyPriceList = {art: null, aNEAR: null, aBTC: null, aGOLD: null, aSPY: null, aEUR: null}\n\n        for(const p in monthlyPriceList){\n            let res1 = await fetch(`http://35.236.75.242:3000/prices/${p}/1M`, {\n                headers : { \n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                 }\n          \n              })\n            res1 = await res1.json()\n            monthlyPriceList[p] = res1\n        }\n\n        for(const p in weeklyPriceList){\n            let res2 = await fetch(`http://35.236.75.242:3000/prices/${p}/1W`, {\n                headers : { \n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                 }\n          \n              })\n            res2 = await res2.json()\n            weeklyPriceList[p] = res2\n        }\n\n        for(const p in dailyPriceList) {\n            let res3 = await fetch(`http://35.236.75.242:3000/prices/${p}/1D`, {\n                headers : { \n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                 }\n          \n              })\n            res3 = await res3.json()\n            dailyPriceList[p] = res3\n        }\n\n        setMonth(monthlyPriceList)\n        setWeek(weeklyPriceList)\n        setDay(dailyPriceList)\n    }\n\n    const getPrice = (array) => {\n      return array.map((arr) => arr.price.toFixed(2))\n    }\n\n    const getDate = (array) => {\n        return array.map((arr) => arr.time)\n    }\n\n    useEffect(async () => {\n        await getPriceList()\n    }, [])\n\n    const getOption = (title, data, date) => {\n      return {\n        title: {\n          text: title,\n          textStyle: {\n              fontWeight: 'bolder',\n              fontSize: 20\n          }\n        },\n        tooltip: {\n          trigger: \"axis\",\n        },\n        xAxis: [\n          {\n            type: \"category\",\n            boundaryGap: false,\n            data: date,\n          },\n        ],\n        yAxis: [\n          {\n            type: \"value\",\n            splitLine: {\n              lineStyle: {\n                color: \"white\",\n              },\n            },\n            axisLabel : {\n              formatter: function (value) {\n                  return value > 1000 ? value/1000 + 'k' : value\n              }\n            }\n          },\n        ],\n        series: [\n          {\n            name: \"Price: \",\n            type: \"line\",\n            lineStyle: {\n              color: \"#9c87f7\",\n              width: 1,\n            },\n            symbol: 'none',\n            areaStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {\n                  offset: 0,\n                  color: \"rgb(207, 196, 255)\",\n                },\n                {\n                  offset: 1,\n                  color: \"rgba(236, 232, 255, 0.1)\",\n                },\n              ]),\n            },\n            data: data,\n          },\n        ],\n      };\n  };\n    \n    const Charts = ({index}) => {\n      console.log(index)\n      return  (\n        <Tabs defaultActiveKey=\"daily\" id=\"price\">\n          <Tab eventKey=\"daily\" title=\"1 Day\">\n            <ReactEcharts\n              option={getOption( index + ' / aUSD', getPrice(day[index]), getDate(day[index]))}\n              style={{width: '100%', height: '780px'}}\n            />\n          </Tab>\n          <Tab eventKey=\"week\" title=\"1 Week\">\n            <ReactEcharts\n              option={getOption( index + ' / aUSD', getPrice(week[index]), getDate(week[index]))}\n              style={{width: '100%', height: '780px'}}\n            />\n          </Tab>\n          <Tab eventKey=\"month\" title=\"1 Month\">\n            <ReactEcharts\n              option={getOption( index + ' / aUSD', getPrice(month[index]), getDate(month[index]))}\n              style={{width: '100%', height: '780px'}}\n             />\n          </Tab>\n        </Tabs>\n    );\n    }\n\n\n    const assetItems = coinList.map((k) =>\n        <option key={k}>\n        {k}\n        </option>\n    )\n\n    const [currentAsset, setCurrentAsset] = useState('art')\n\n    return (\n        <>\n        <Row noGutters className=\"p-2\" style={{background: '#fff'}}>\n            <Form.Group controlId=\"formSelect\">\n                <Form.Control \n                    value={currentAsset} \n                    as=\"select\" \n                    onChange={(event) => {\n                        if (event) {\n                            const value = event.target !== null ? event.target.value : \"\";\n                            setCurrentAsset(value)\n                        }\n                    }}>\n                    {assetItems}\n                </Form.Control>\n            </Form.Group>\n        </Row>\n        {day.art !== null &&\n        <div>\n          <Charts index={currentAsset} />\n        </div>\n        }    \n        </>\n    )\n}\n\nexport default Markets\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Row, Col } from 'react-bootstrap'\n\nconst Header = ({currentUser, signIn, signOut}) => {\n    if (!currentUser) {\n        return <div style={{width: '110%'}}>\n            <Row>\n                <Col>\n                    <p>ARTIFICIAL EXCHANGE</p>\n                </Col>\n                <Col>\n                    <NavLink exact to=\"/\">Home</NavLink>\n                </Col>\n                <Col>\n                    <button onClick={signIn}>\n                        Sign In\n                    </button>\n                </Col>\n            </Row>\n        </div>\n    }\n    return (\n        <Row noGutters className='mb-5'>\n            <Col>\n                <NavLink exact to=\"/\" className=\"head-item\"><p>ARTIFICIAL EXCHANGE</p></NavLink>\n            </Col>\n            <Col className=\"p-2\">\n                <NavLink exact to=\"/markets\" className=\"head-item\">Markets</NavLink>\n            </Col>\n            <Col className=\"p-2\">\n                <NavLink exact to=\"/wallet\" className=\"head-item\">Wallet</NavLink>\n            </Col>\n            <Col className=\"p-2\">\n                <NavLink exact to=\"/trade\" className=\"head-item\">Trade</NavLink>\n            </Col>\n            <Col className=\"p-2\">\n                <NavLink exact to=\"/stake\" className=\"head-item\">Stake</NavLink>\n            </Col>\n            <Col className=\"p-2\">\n                <NavLink exact to=\"/faqs\" className=\"head-item\">FAQs</NavLink>\n            </Col>\n            <Col className=\"p-2\">\n                <NavLink exact to=\"/docs\" className=\"head-item\">DOCs</NavLink>\n            </Col>\n            <Col onClick={signOut} className=\"p-2\">\n                <button onClick={signOut}>Sign Out</button>\n            </Col>\n        </Row>)\n}\n\nexport default Header","import React, {useState, useCallback} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Spinner, Row } from 'react-bootstrap'\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ARTCard from './components/ARTCard'\nimport TradeCard from './components/TradeCard'\nimport Wallet from './components/Wallet'\nimport FAQ from './components/FAQ'\nimport Docs from './components/Docs'\nimport Dash from './components/Dash'\nimport Markets from './components/Markets'\n\nimport Header from './components/Header'\n \nimport './App.css'\n\nconst App = ({ contract, currentUser, nearConfig, wallet, ausdContract }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const signIn = useCallback(() => {\n    wallet.requestSignIn(nearConfig.contractName, \"NEAR ART Coin\");\n  }, [wallet, nearConfig]);\n\n  const signOut = useCallback(() => {\n    wallet.signOut();\n    setTimeout(setLoading(true), 5000);\n    window.location = \"/\";\n    setLoading(false);\n  }, [wallet]);\n\n  if (isLoading) {\n    return (\n      <Container>\n      <header>ART Coin Exchange</header>\n      <div>\n      <Spinner animation=\"border\" size=\"sm\" variant=\"warning\"/>\n      <Spinner animation=\"border\" size=\"sm\" variant=\"warning\"/>\n      <Spinner animation=\"border\" size=\"sm\" variant=\"warning\"/>\n      <Spinner animation=\"border\" variant=\"warning\"/>\n      <Spinner animation=\"border\" variant=\"warning\"/>\n      <Spinner animation=\"border\" variant=\"warning\"/>\n      </div>\n    </Container>\n    )\n  }\n\n  if(!currentUser) {\n    return (\n      <Container>\n        <Header signIn={signIn} signOut={signOut} currentUser={currentUser} />\n        <Row noGutters style={{height: '50px'}}>\n          Welcome to ART coin, please log in with NEAR wallet to start journey!\n        </Row>\n        <button onClick={signIn}>Log In</button>\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <Header signIn={signIn} signOut={signOut} currentUser={currentUser} />\n      <Switch>\n        <Route exact path=\"/\" \n          render={() => <Dash contract={contract} accountId={currentUser.accountId}/>}/>\n        <Route exact path=\"/stake\" \n          render={() => <ARTCard contract={contract} currentUser={currentUser} ausdContract={ausdContract} />} />\n        <Route exact path=\"/trade\" \n          render={() => <TradeCard contract={contract} accountId={currentUser.accountId}/>}/>\n        <Route exact path=\"/wallet\" \n          render={() => <Wallet contract={contract} accountId={currentUser.accountId} ausdContract={ausdContract}/>}/>\n        <Route exact path='/faqs' component={FAQ} />\n        <Route exact path='/docs' component={Docs} />\n        <Route exact path='/markets' component={Markets} />\n        <Route\n          render={() => (\n            <h1>\n              Not found This page. Please go back to continue or you can contact\n              us about the issue.\n            </h1>\n          )}\n        />\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\n\nimport * as nearAPI from \"near-api-js\";\nimport getConfig from \"./config\";\n\n// Initializing contract\nasync function initContract() {\n  const nearConfig = getConfig(process.env.NODE_ENV || 'testnet');\n  window.near = nearAPI\n  // Initializing connection to the NEAR TestNet\n  const near = await nearAPI.connect({\n    deps: {\n      keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore()\n    },\n    ...nearConfig\n  });\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in account data\n  let currentUser;\n  if(walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(walletConnection.account(), nearConfig.contractName, {\n    // View methods are read-only – they don't modify the state, but usually return some value\n    viewMethods: [\n                  'get_total_balance', \n                  'get_unstaked_balance', \n                  'get_staked_balance', \n                  'get_price', \n                  'get_asset_price',\n                  'get_asset_balance'\n                ],\n    // Change methods can modify the state, but you don't receive the returned value when called\n    changeMethods: [\n                    'stake_and_mint', \n                    'burn_to_unstake', \n                    'get_some_art',\n                    'buy_asset_with_ausd',\n                    'sell_asset_to_ausd',\n                    'transfer',\n                    'buy_art_with_near',\n                    'buy_ausd_with_near'\n                  ],\n    // Sender is the account ID to initialize transactions.\n    // getAccountId() will return empty string if user is still unauthorized\n    sender: walletConnection.getAccountId()\n  });\n\n  const ausdContract = await new nearAPI.Contract(walletConnection.account(), 'ausd.artcoin.testnet', {\n    // View methods are read-only – they don't modify the state, but usually return some value\n    viewMethods: ['get_balance'],\n    // Change methods can modify the state, but you don't receive the returned value when called\n    changeMethods: [],\n    // Sender is the account ID to initialize transactions.\n    // getAccountId() will return empty string if user is still unauthorized\n    sender: walletConnection.getAccountId()\n  });\n\n  return { contract, currentUser, nearConfig, walletConnection, ausdContract };\n}\n\nwindow.nearInitPromise = initContract()\n  .then(({ contract, currentUser, nearConfig, walletConnection, ausdContract }) => {\n    ReactDOM.render(\n      <BrowserRouter>\n      <App\n        ausdContract={ausdContract}\n        contract={contract}\n        currentUser={currentUser}\n        nearConfig={nearConfig}\n        wallet={walletConnection}\n      />\n      </BrowserRouter>,\n      document.getElementById('root')\n    );\n  });\n\n"],"sourceRoot":""}