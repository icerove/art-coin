{"version":3,"sources":["config.js","components/ARTCard.js","components/TradeCard.js","App.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","GAS","UNIT","BN","ARTCard","currentUser","contract","signOut","signIn","ausdContract","useState","artTotalBalance","setArtTotalBalance","artStakedBalance","setArtStakedBalance","artUnstakedBalance","setArtUnstakedBalance","ausdBalance","setAusdBalance","artPrice","setArtPrice","nearBalance","formatNearAmount","balance","nearPrice","setNearPrice","transferSubmit","setTransferSubmit","stakeAndMintLoading","setStakeAndMintLoading","setUnstakeAndBurnLoading","loadTotalBalance","get_total_balance","owner_id","accountId","then","art","loadUnstakedBalance","get_unstaked_balance","loadStakedBalance","get_staked_balance","account_id","loadPrice","get_price","price","loadAUSDBalance","get_balance","ausd","loadNearPrice","get_asset_price","asset","useEffect","console","log","setInterval","deposit","setDeposit","receiver","setReceiver","amount","setAmount","transferArt","event","a","preventDefault","transfer","new_owner_id","setShow","stakeAmount","setStake","stakeAndmint","stake_and_mint","stake","unstakeAmount","setUnstake","burnToUnstake","burn_to_unstake","unstake_amount","show","maybeLoad","state","displayFun","Spinner","size","animation","className","Row","noGutters","style","background","Col","textAlign","onClick","undefined","fontSize","Number","toFixed","n","Modal","onHide","Header","closeButton","Title","Body","Form","width","onSubmit","Group","controlId","Label","InputGroup","FormControl","value","onChange","target","Button","type","Footer","nearDeposit","mul","div","buy_art_with_near","toString","Prepend","Text","buy_ausd_with_near","TradeCard","assetP","setAssetP","assetB","setAssetB","currentAsset","setCurrentAsset","buyLoading","setBuyLoading","sellLoading","setSellLoading","loadCurrentAssetPrice","loadAssetPrice","loadCurrentAssetBalance","loadAssetBalance","get_asset_balance","assetItems","Object","entries","map","k","aUSD","buyAmount","setBuyAmount","sellAmount","setSellAmount","buyAssetWithAusd","toLocaleString","useGrouping","buy_asset_with_ausd","asset_amount","sellAssettoAusd","sell_asset_to_ausd","Control","as","Accordion","Card","Toggle","eventKey","Collapse","variant","App","nearConfig","wallet","isLoading","setLoading","useCallback","requestSignIn","setTimeout","window","location","Container","height","getConfig","near","nearAPI","deps","keyStore","BrowserLocalStorageKeyStore","walletConnection","getAccountId","account","viewMethods","changeMethods","sender","nearInitPromise","initContract","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa03100f.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'art.artcoin.testnet'\n\nfunction getConfig (env) {\n  switch (env) {\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      }\n    case 'production':\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'default',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      }\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      }\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${process.env.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME\n      }\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      }\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      }\n    default:\n      throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n  }\n}\n\nmodule.exports = getConfig","import React, {useEffect, useState} from 'react';\nimport { Row, Col, Button, Form, InputGroup, FormControl, Modal, Spinner } from 'react-bootstrap';\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\nimport BN from 'bn.js'\n\nconst GAS = 300000000000000\nconst UNIT = new BN('1000000000000000000000000')\n\nconst ARTCard = ({currentUser, contract, signIn, signOut, ausdContract}) => {\n    const [artTotalBalance, setArtTotalBalance] = useState('l')\n    const [artStakedBalance, setArtStakedBalance] = useState('l')\n    const [artUnstakedBalance, setArtUnstakedBalance] = useState('l')\n\n    const [ausdBalance, setAusdBalance] = useState('l')\n    const [artPrice, setArtPrice] = useState('l')\n    const nearBalance = formatNearAmount(currentUser.balance,5)\n    const [nearPrice, setNearPrice] = useState('l')\n    \n    // Button text, '' means show text, 'l' means show spinner\n    const [transferSubmit, setTransferSubmit] = useState('')\n    const [stakeAndMintLoading, setStakeAndMintLoading ] = useState('')\n    const [unstakAndBurnLoading, setUnstakeAndBurnLoading ] = useState('')\n\n    const loadTotalBalance = () => {\n        return contract.get_total_balance({owner_id: currentUser.accountId})\n                .then((art) => setArtTotalBalance(art))\n    }\n\n    const loadUnstakedBalance = () => {\n        return contract.get_unstaked_balance({owner_id: currentUser.accountId})\n        .then((art) => setArtUnstakedBalance(art))\n    }\n\n    const loadStakedBalance = () => {\n        return contract.get_staked_balance({account_id: currentUser.accountId})\n        .then((art) => setArtStakedBalance(art))\n    }\n\n    const loadPrice = () => {\n        contract.get_price()\n        .then((price) => setArtPrice(price))\n    }\n\n    const loadAUSDBalance = () => {\n        ausdContract.get_balance({owner_id: currentUser.accountId})\n        .then((ausd) => setAusdBalance(ausd))\n    }\n\n    const loadNearPrice = () => {\n        contract.get_asset_price({asset: 'aNEAR'})\n        .then((price) => {\n            setNearPrice(price)\n        })\n    }\n\n    useEffect(() => {\n        console.log('hit here')\n        loadTotalBalance()\n        loadUnstakedBalance()\n        loadStakedBalance()\n        loadPrice()\n        loadAUSDBalance()\n        loadNearPrice()\n\n        setInterval(() => {\n            loadPrice()\n            loadAUSDBalance()\n            loadNearPrice() \n        }, 300000)\n    }, [])\n    console.log(contract)\n    // deposit\n    const [deposit, setDeposit] = useState('10')\n\n    const buyArtWithNear = (event) => {\n        event.preventDefault()\n        let nearDeposit = new BN(deposit).mul(new BN(artPrice)).mul(UNIT).div(new BN(nearPrice))\n        contract.buy_art_with_near({}, GAS, nearDeposit.toString())\n    }\n\n    const buyAusdWithNear = (event) => {\n        event.preventDefault()\n        let nearDeposit = new BN(deposit).mul(UNIT).mul(new BN(100000000)).div(new BN(nearPrice))\n        contract.buy_ausd_with_near({}, GAS, nearDeposit.toString())\n    }\n\n    // receiver\n    const [receiver, setReceiver] = useState('')\n    const [amount, setAmount] = useState('')\n\n    const transferArt = async (event) => {\n        event.preventDefault()\n        setArtTotalBalance('l')\n        setArtUnstakedBalance('l')\n        setTransferSubmit('l')\n        await contract.transfer({new_owner_id: receiver, amount: amount + '000000000000000000000000'}, GAS)\n        setTransferSubmit('')\n        setShow(false)\n        loadTotalBalance()\n        loadUnstakedBalance()\n    }\n\n    // stake\n    const [stakeAmount, setStake] = useState('1000')\n\n    const sleep = (time) => {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    const stakeAndmint = async (event) => {\n        event.preventDefault()\n        setArtUnstakedBalance('l')\n        setArtStakedBalance('l')\n        setAusdBalance('l')\n        setStakeAndMintLoading('l')\n        await contract.stake_and_mint({stake: stakeAmount + '000000000000000000000000'})\n        setStakeAndMintLoading('')\n        loadAUSDBalance()\n        loadStakedBalance()\n        loadUnstakedBalance()\n    }\n\n    //unstake\n    const [unstakeAmount, setUnstake] = useState('1000')\n\n    const burnToUnstake = async (event) => {\n        event.preventDefault()\n        setArtUnstakedBalance('l')\n        setArtStakedBalance('l')\n        setAusdBalance('l')\n        setUnstakeAndBurnLoading('l')\n        await contract.burn_to_unstake({unstake_amount: unstakeAmount + '000000000000000000000000'})\n        setUnstakeAndBurnLoading('')\n        loadAUSDBalance()\n        loadStakedBalance()\n        loadUnstakedBalance()\n    }\n\n    //modal\n    const [show, setShow] = useState(false);\n\n    const maybeLoad = (state, displayFun) => {\n        if (state == 'l') {\n           return <Spinner       size=\"sm\"           animation=\"border\" />\n        } else {\n            return displayFun(state)\n        }\n    } \n\n    return (<div className=\"art-card\">\n    <Row noGutters className=\"p-2 mb-2\" style={{background: '#fff'}}>\n        <Col>NEAR Wallet : {currentUser.accountId} </Col>\n        <Col>NEAR Balance: {nearBalance} Ⓝ</Col>\n        <Col style={{textAlign: 'end'}}>\n            {currentUser && <button onClick={signOut}>Log Out</button>}\n        </Col>\n    </Row>\n    {currentUser !== undefined ?\n    <> \n        <Row noGutters style={{fontSize:\"12px\"}} className=\"p-2 mb-2\">\n            - If you want staking ART, start with \"Buy ART with NEAR token\"\n            For every $5 value of ART staked, you will mint 1 aUSD. In reverse, after burning 1 aUSD, you will get $5 value of ART back.\n            In future, staking reward and governance will be enabled for ART stakers.\n        </Row>\n        <Row noGutters style={{fontSize:\"12px\"}} className=\"p-2 mb-2\">\n            - If you just want trading with stable coin, start with \"Buy aUSD with NEAR token\"\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\" style={{background: '#fff'}}>\n            <Col>\n                ART Price: {maybeLoad(artPrice, (a) => (Number(a)/10**8).toFixed(2))} $\n            </Col>\n            <Col>\n                NEAR Price: {maybeLoad(nearPrice, (n) => (Number(n)/10**8).toFixed(2))} $\n            </Col>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\">\n            <Col>\n                ART Total Balace: {maybeLoad(artTotalBalance, (a) => formatNearAmount(a, 5))} ⓐ {' '} <br />\n                ART Staked Balace: {maybeLoad(artStakedBalance, (a) => formatNearAmount(a, 5))} ⓐ\n            </Col>\n            <Col>     \n                ART Unstaked Balace: {maybeLoad(artUnstakedBalance, (a) => formatNearAmount(a, 5))} ⓐ\n                <button onClick={() => setShow(true)}>Transfer</button>\n                <Modal show={show} onHide={() =>setShow(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Transfer ART to your hoomie</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form style={{width: \"100%\"}} onSubmit={transferArt}>\n                            <Form.Group controlId=\"receiver\">\n                                <Form.Label>Receiver: </Form.Label>\n                                <InputGroup className=\"mb-2\" >\n                                    <FormControl \n                                        value={receiver}\n                                        onChange={(event) => {\n                                            if (event) {\n                                                const value = event.target !== null ? event.target.value : \"\";\n                                                setReceiver(value)\n                                            }\n                                        }} \n                                    />\n                                </InputGroup>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"sendamount\">\n                                <Form.Label>Send Amount: </Form.Label>\n                                <InputGroup className=\"mb-2\" >\n                                    <FormControl \n                                        value={amount}\n                                        onChange={(event) => {\n                                            if (event) {\n                                                const value = event.target !== null ? event.target.value : \"\";\n                                                setAmount(value)\n                                            }\n                                        }} \n                                    />\n                                </InputGroup>\n                            </Form.Group>\n\n                            <Button type=\"submit\">\n                                {maybeLoad(transferSubmit, (a) => 'Confirm Transfer')}\n                            </Button>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={() => setShow(false)}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Col>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\">\n            <Col>\n                <Form style={{width: \"100%\"}} onSubmit={buyArtWithNear}>\n                    <Form.Row className=\"align-items-center\">\n                        <Col className=\"mx-1\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>ART Amount</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl  \n                                value={deposit}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setDeposit(value)\n                                    }\n                                }} />\n                        </InputGroup>\n                        </Col>\n                        <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                        <Button type=\"submit\">Buy ART with NEAR token</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Col>\n        </Row>\n        <Row noGutters className=\"p-2\" style={{background: '#fff'}}>\n            <Col>\n                aUSD Balance: {maybeLoad(ausdBalance, (a) => formatNearAmount(a, 5))} $\n            </Col>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\" style={{background: '#fff'}}>\n            <Col>\n                <Form style={{width: \"100%\"}} onSubmit={buyAusdWithNear}>\n                    <Form.Row className=\"align-items-center\">\n                        <Col className=\"mx-1\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>aUSD Amount</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl  \n                                value={deposit}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setDeposit(value)\n                                    }\n                                }} />\n                        </InputGroup>\n                        </Col>\n                        <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                        <Button type=\"submit\">Buy aUSD with NEAR token</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Col>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\">\n            <Form style={{width: \"100%\"}} onSubmit={stakeAndmint}>\n                <Form.Row className=\"align-items-center\">\n                    <Col className=\"mx-1\">\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>ART Amount</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl  \n                            value={stakeAmount}\n                            onChange={(event) => {\n                                if (event) {\n                                    const value = event.target !== null ? event.target.value : \"\";\n                                    setStake(value)\n                                  }\n                            }} />\n                    </InputGroup>\n                    </Col>\n                    <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                    <Button type=\"submit\">{maybeLoad(stakeAndMintLoading, () => 'Stake & Mint')}</Button>\n                    </Col>\n                </Form.Row>\n            </Form>\n        </Row>\n        <Row noGutters className=\"p-2 mb-2\">\n            <Form style={{width: \"100%\"}} onSubmit={burnToUnstake}>\n                <Form.Row className=\"align-items-center\">\n                    <Col className=\"mx-1\">\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                        <InputGroup.Text>ART Amount</InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl \n                            value={unstakeAmount}\n                            onChange={(event) => {\n                                if (event) {\n                                    const value = event.target !== null ? event.target.value : \"\";\n                                    setUnstake(value)\n                                  }\n                            }}\n                         />\n                    </InputGroup>\n                    </Col>\n                    <Col className=\"mx-1\" style={{textAlign: 'end'}}>\n                    <Button type=\"submit\">{maybeLoad(setUnstakeAndBurnLoading, (a) => 'Burn to Unstake')}</Button>\n                    </Col>\n                </Form.Row>\n            </Form>\n        </Row>\n    </>\n    : <Row noGutters className=\"p-5\">\n        Welcome to ART Wallet, please login with your near account to start\n        </Row>}\n    </div>)\n}\n\nexport default ARTCard","import React, {useState, useEffect} from 'react'\nimport { Row, Col, Button, Form, FormControl, InputGroup, Accordion, Card, Spinner } from 'react-bootstrap'\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\"\n\nconst GAS = 300000000000000\n\nconst TradeCard = ({contract, accountId}) => {\n\n    const [assetP, setAssetP] = useState({'aNEAR':'0', 'aBTC':'0', 'aGOLD':'0', 'aSPY':'0', 'aEUR':'0'})\n    const [assetB, setAssetB] = useState({'aNEAR':'0', 'aBTC':'0', 'aGOLD':'0', 'aSPY':'0', 'aEUR':'0'})\n    const [currentAsset, setCurrentAsset] = useState(\"aBTC\")\n\n    // Button text, '' means show text, 'l' means show spinner\n    const [buyLoading, setBuyLoading] = useState('')\n    const [sellLoading, setSellLoading] = useState('')\n\n    const maybeLoad = (state, displayFun) => {\n        if (state == 'l') {\n           return <Spinner       size=\"sm\"           animation=\"border\" />\n        } else {\n            return displayFun(state)\n        }\n    }\n\n    const loadCurrentAssetPrice = () => {\n        loadAssetPrice(currentAsset)\n    }\n\n    const loadCurrentAssetBalance = () => {\n        loadAssetBalance(currentAsset)\n    }\n\n    const loadAssetPrice = (a) => {\n        contract.get_asset_price({asset: a})\n        .then((price) => {\n            setAssetP({...assetP,[a]: price})\n        })\n    }\n\n    const loadAssetBalance = (a) => {\n        contract.get_asset_balance({account_id: accountId, asset: a})\n        .then((balance) => setAssetB({...assetB, [a]: balance}))\n    }\n\n    useEffect(() => {\n        loadCurrentAssetPrice()\n        loadCurrentAssetBalance()\n        setInterval(() => {\n            loadCurrentAssetPrice() \n        }, 300000)\n    }, [])\n\n    const assetItems = Object.entries(assetB).map(([k, _]) =>\n        <option key={k}>\n        {k}\n        </option>\n    )\n\n    const [buyAmount, setBuyAmount] = useState({asset: '0', aUSD: '0'})\n\n    const [sellAmount, setSellAmount] = useState({asset:'0', aUSD: '0'})\n\n    const buyAssetWithAusd = async (event) => {\n        event.preventDefault()\n        let amount = (Number(buyAmount.asset)*(10**24)).toLocaleString('fullwide', {useGrouping:false})\n        setBuyLoading('l')\n        await contract.buy_asset_with_ausd({asset: currentAsset, asset_amount: amount}, GAS)\n        await loadCurrentAssetBalance()\n        setBuyLoading('')\n    }\n\n    const sellAssettoAusd = async (event) => {\n        event.preventDefault()\n        let amount = (Number(sellAmount.asset)*(10**24)).toLocaleString('fullwide', {useGrouping:false})\n        setSellLoading('l')\n        await contract.sell_asset_to_ausd({asset: currentAsset, asset_amount: amount}, GAS)\n        await loadCurrentAssetBalance()\n        setSellLoading('')\n    }\n\n    return <div className=\"trade-card\">\n    <Row noGutters className=\"p-2\" style={{background: '#fff'}}>\n       <Col>BUY/SELL</Col> \n       <Col>\n            <Form.Group controlId=\"formSelect\">\n                <Form.Control \n                    value={currentAsset} \n                    as=\"select\" \n                    onChange={(event) => {\n                        if (event) {\n                            const value = event.target !== null ? event.target.value : \"\";\n                            setCurrentAsset(value)\n                            loadAssetBalance(value)\n                            loadAssetPrice(value)\n                        }\n                    }}>\n                    {assetItems}\n                </Form.Control>\n            </Form.Group>\n       </Col>\n    </Row>\n    <Accordion>\n        <Card>\n            <Card.Header>\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                    BUY\n                </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                    <Form\n                        onSubmit={buyAssetWithAusd} \n                        style={{width: '100%'}}>\n                        <Form.Group controlId=\"buyAsset\">\n                            <Form.Label>BUY {currentAsset}: </Form.Label>\n                            <InputGroup className=\"mb-2\" >\n                                <InputGroup.Prepend>\n                                    <InputGroup.Text>{currentAsset}</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl \n                                    value={buyAmount.asset}\n                                    onChange={(event) => {\n                                        if (event) {\n                                            const value = event.target !== null ? event.target.value : \"\";\n                                            setBuyAmount({asset: value, aUSD: Number(value)*Number(assetP[currentAsset])/10**8})\n                                        }\n                                    }} \n                                />\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"fromausd\">\n                            <Form.Label>with aUSD: </Form.Label>\n                            <InputGroup className=\"mb-2\">\n                                <InputGroup.Prepend>\n                                <InputGroup.Text>aUSD</InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl \n                                    value={buyAmount.aUSD}\n                                    onChange={(event) => {\n                                        if (event) {\n                                            const value = event.target !== null ? event.target.value : \"\";\n                                            setBuyAmount({asset: Number(value)/(Number(assetP[currentAsset])/10**8), aUSD: value})\n                                        }\n                                    }} \n                                />\n                            </InputGroup>\n                        </Form.Group>\n                        \n                        <Row style={{fontSize: \"12px\"}}>\n                            <Col>Balance: {formatNearAmount(assetB[currentAsset],5)}</Col>\n                            <Col>Price: 1 {currentAsset} = {(Number(assetP[currentAsset])/10**8).toFixed(4)} aUSD</Col>\n                            <Col>USD VALUE: ${(Number(buyAmount.asset)*Number(assetP[currentAsset])/10**8).toFixed(4)}</Col>\n                        </Row>\n\n                        <Button variant=\"primary\" type=\"submit\">\n                            {maybeLoad(buyLoading, (a) => 'CONFIRM TRADE')}\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n        <Card>\n            <Card.Header>\n            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                SELL\n            </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n                <Form \n                    onSubmit={sellAssettoAusd}\n                    style={{width: '100%'}}>\n                    <Form.Group controlId=\"sellAsset\">\n                        <Form.Label>SELL {currentAsset}: </Form.Label>\n                        <InputGroup className=\"mb-2\" >\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>{currentAsset}</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl \n                                value={sellAmount.asset}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setSellAmount({asset: value, aUSD: Number(value)*Number(assetP[currentAsset])/10**8})\n                                    }\n                                }} \n                                />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"toausd\">\n                        <Form.Label>to aUSD: </Form.Label>\n                        <InputGroup className=\"mb-2\">\n                            <InputGroup.Prepend>\n                            <InputGroup.Text>aUSD</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl \n                                value={sellAmount.aUSD}\n                                onChange={(event) => {\n                                    if (event) {\n                                        const value = event.target !== null ? event.target.value : \"\";\n                                        setSellAmount({asset: Number(value)/(Number(assetP[currentAsset])/10**8), aUSD: value})\n                                    }\n                                }} \n                            />\n                        </InputGroup>\n                    </Form.Group>\n                    \n                    <Row style={{fontSize: \"12px\"}}>\n                        <Col>Balace: {formatNearAmount(assetB[currentAsset],5)}</Col>\n                        <Col>Price: 1 {currentAsset} = {(Number(assetP[currentAsset])/10**8).toFixed(4)} aUSD</Col>\n                        <Col>USD VALUE: ${(Number(sellAmount.asset)*Number(assetP[currentAsset])/10**8).toFixed(4)}</Col>\n                    </Row>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        {maybeLoad(sellLoading, (a) => 'CONFIRM TRADE')}\n                    </Button>\n                </Form>\n            </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    </Accordion>\n    </div>\n}\n\nexport default TradeCard\n\n","import React, {useState, useCallback} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Spinner, Row } from 'react-bootstrap'\nimport ARTCard from './components/ARTCard'\nimport TradeCard from './components/TradeCard'\n\nimport './App.css'\n\nconst App = ({ contract, currentUser, nearConfig, wallet, ausdContract }) => {\n  const [isLoading, setLoading] = useState(false);\n\n  const signIn = useCallback(() => {\n    wallet.requestSignIn(nearConfig.contractName, \"NEAR ART Coin\");\n  }, [wallet, nearConfig]);\n\n  const signOut = useCallback(() => {\n    wallet.signOut();\n    setTimeout(setLoading(true), 5000);\n    window.location = \"/\";\n    setLoading(false);\n  }, [wallet]);\n\n  if (isLoading) {\n    return (\n      <Container>\n      <header>ART Coin Exchange</header>\n      <div>\n      <Spinner animation=\"border\" size=\"sm\" variant=\"warning\"/>\n      <Spinner animation=\"border\" size=\"sm\" variant=\"warning\"/>\n      <Spinner animation=\"border\" size=\"sm\" variant=\"warning\"/>\n      <Spinner animation=\"border\" variant=\"warning\"/>\n      <Spinner animation=\"border\" variant=\"warning\"/>\n      <Spinner animation=\"border\" variant=\"warning\"/>\n      </div>\n    </Container>\n    )\n  }\n\n  if(!currentUser) {\n    return (\n      <Container>\n      <header>ART Coin Exchange</header>\n      <Row noGutters style={{height: '50px'}}>\n        Welcome to ART coin, please log in with NEAR wallet to start journey!\n      </Row>\n      <button onClick={signIn}>Log In</button>\n    </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <header>ART Coin Exchange</header>\n        <ARTCard \n          ausdContract={ausdContract}\n          currentUser={currentUser} \n          contract={contract}\n          signIn={signIn}\n          signOut={signOut}\n        />\n        <hr />\n        <TradeCard \n          contract={contract}\n          accountId={currentUser.accountId}\n        />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as nearAPI from \"near-api-js\";\nimport getConfig from \"./config\";\n\n// Initializing contract\nasync function initContract() {\n  const nearConfig = getConfig(process.env.NODE_ENV || 'testnet');\n  window.near = nearAPI\n  // Initializing connection to the NEAR TestNet\n  const near = await nearAPI.connect({\n    deps: {\n      keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore()\n    },\n    ...nearConfig\n  });\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near);\n\n  // Load in account data\n  let currentUser;\n  if(walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount\n    };\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(walletConnection.account(), nearConfig.contractName, {\n    // View methods are read-only – they don't modify the state, but usually return some value\n    viewMethods: [\n                  'get_total_balance', \n                  'get_unstaked_balance', \n                  'get_staked_balance', \n                  'get_price', \n                  'get_asset_price',\n                  'get_asset_balance'\n                ],\n    // Change methods can modify the state, but you don't receive the returned value when called\n    changeMethods: [\n                    'stake_and_mint', \n                    'burn_to_unstake', \n                    'get_some_art',\n                    'buy_asset_with_ausd',\n                    'sell_asset_to_ausd',\n                    'transfer',\n                    'buy_art_with_near',\n                    'buy_ausd_with_near'\n                  ],\n    // Sender is the account ID to initialize transactions.\n    // getAccountId() will return empty string if user is still unauthorized\n    sender: walletConnection.getAccountId()\n  });\n\n  const ausdContract = await new nearAPI.Contract(walletConnection.account(), 'ausd.artcoin.testnet', {\n    // View methods are read-only – they don't modify the state, but usually return some value\n    viewMethods: ['get_balance'],\n    // Change methods can modify the state, but you don't receive the returned value when called\n    changeMethods: [],\n    // Sender is the account ID to initialize transactions.\n    // getAccountId() will return empty string if user is still unauthorized\n    sender: walletConnection.getAccountId()\n  });\n\n  return { contract, currentUser, nearConfig, walletConnection, ausdContract };\n}\n\nwindow.nearInitPromise = initContract()\n  .then(({ contract, currentUser, nearConfig, walletConnection, ausdContract }) => {\n    ReactDOM.render(\n      <App\n        ausdContract={ausdContract}\n        contract={contract}\n        currentUser={currentUser}\n        nearConfig={nearConfig}\n        wallet={walletConnection}\n      />,\n      document.getElementById('root')\n    );\n  });\n\n"],"sourceRoot":""}